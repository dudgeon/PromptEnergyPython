[
  {
    "name": "Code Annotation",
    "description": "Annotate code to help a human software engineer understand poorly documented code in a language they are not familiar with.",
    "author": "Geoff",
    "prompt": "I would like your help with a code annotation exercise. Analyze the code, reply as though you are speaking to a human, and format your response using Markdown. Divide the code into significant component blocks, without modifying it. For each block, provide a helpful description in Markdown, noting any new variables and functions. Include the original code for each block as a separate Markdown code block beneath its description. Here is the code to analyze and document:",
    "requires_context": true,
    "placeholder_context": "PRINTSTMT(ACCTNUM, STARTDATE, ENDDATE)\n N TRANSACTION, TRANSACTIONDATE, TRANSACTIONAMT, TRANSACTIONDESC\n N BALANCE, DOLLARS, CENTS\n S BALANCE=0\n S DOLLARS=0\n S CENTS=0\n S TRANSACTIONDATE=STARTDATE-1\n F  S TRANSACTIONDATE=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE)) Q:'TRANSACTIONDATE!(TRANSACTIONDATE>ENDDATE)  D\n . S TRANSACTIONAMT=\"\"\n . F  S TRANSACTIONAMT=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE,TRANSACTIONAMT)) Q:'TRANSACTIONAMT  D\n . . S TRANSACTIONDESC=\"\"\n . . F  S TRANSACTIONDESC=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE,TRANSACTIONAMT,TRANSACTIONDESC)) Q:'TRANSACTIONDESC  D\n . . . S BALANCE=BALANCE+TRANSACTIONAMT\n . . . S DOLLARS=$P(TRANSACTIONAMT,\".\")\n . . . S CENTS=$P(TRANSACTIONAMT,\".\",2)\n . . . I CENTS=\"\" S CENTS=0\n . . . I $L(CENTS)>2 S CENTS=$E(CENTS,1,2)\n . . . S TRANSACTIONDATE=$$FMTE^XLFDT(TRANSACTIONDATE)\n . . . W !,TRANSACTIONDATE,?15,TRANSACTIONDESC,?55,\"$\",DOLLARS,\".\",$S(CENTS=\"\":\"00\",1:CENTS)\n S DOLLARS=$P(BALANCE,\".\")\n S CENTS=$P(BALANCE,\".\",2)\n I CENTS=\"\" S CENTS=0\n I $L(CENTS)>2 S CENTS=$E(CENTS,1,2)\n W !,\"Ending Balance:\",?55,\"$\",DOLLARS,\".\",$S(CENTS=\"\":\"00\",1:CENTS)\n Q\n",
    "response_is_code": true
  },
  {
    "name": "Code Annotation + Summary",
    "description": "Annotate code to help a human software engineer understand poorly documented code in a language they are not familiar with.",
    "author": "Geoff",
    "prompt": "Please help me understand code that I will provide. Begin with an in-line comment describing the code's high-level purpose and the variables and functions it uses. Then divide the code into component blocks of functionality; for each block, begin with an in-line comment describing the functionality of the block, followed by the code lock being described. Here is the code:",
    "requires_context": true,
    "placeholder_context": "PRINTSTMT(ACCTNUM, STARTDATE, ENDDATE)\n N TRANSACTION, TRANSACTIONDATE, TRANSACTIONAMT, TRANSACTIONDESC\n N BALANCE, DOLLARS, CENTS\n S BALANCE=0\n S DOLLARS=0\n S CENTS=0\n S TRANSACTIONDATE=STARTDATE-1\n F  S TRANSACTIONDATE=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE)) Q:'TRANSACTIONDATE!(TRANSACTIONDATE>ENDDATE)  D\n . S TRANSACTIONAMT=\"\"\n . F  S TRANSACTIONAMT=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE,TRANSACTIONAMT)) Q:'TRANSACTIONAMT  D\n . . S TRANSACTIONDESC=\"\"\n . . F  S TRANSACTIONDESC=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE,TRANSACTIONAMT,TRANSACTIONDESC)) Q:'TRANSACTIONDESC  D\n . . . S BALANCE=BALANCE+TRANSACTIONAMT\n . . . S DOLLARS=$P(TRANSACTIONAMT,\".\")\n . . . S CENTS=$P(TRANSACTIONAMT,\".\",2)\n . . . I CENTS=\"\" S CENTS=0\n . . . I $L(CENTS)>2 S CENTS=$E(CENTS,1,2)\n . . . S TRANSACTIONDATE=$$FMTE^XLFDT(TRANSACTIONDATE)\n . . . W !,TRANSACTIONDATE,?15,TRANSACTIONDESC,?55,\"$\",DOLLARS,\".\",$S(CENTS=\"\":\"00\",1:CENTS)\n S DOLLARS=$P(BALANCE,\".\")\n S CENTS=$P(BALANCE,\".\",2)\n I CENTS=\"\" S CENTS=0\n I $L(CENTS)>2 S CENTS=$E(CENTS,1,2)\n W !,\"Ending Balance:\",?55,\"$\",DOLLARS,\".\",$S(CENTS=\"\":\"00\",1:CENTS)\n Q\n",
    "response_is_code": true
  },
  {
    "name": "Feature -> Stories + Gherkin",
    "description": "Help a product manager turn an unstructured description of a feature into a standardized, engineer-friendly story in Gherkin format, including test cases.",
    "author": "Geoff",
    "prompt": "Please write the comprehensive set of correctly formatted user stories required to enable the provided feature context in markdown. Sub-bullet each user story with the comprehensive gherkin acceptance criteria describing all behaviors for the user story. Here is the feature context:",
    "requires_context": true,
    "placeholder_context": "Geoff the product manager has an idea for a new LLM prompt; he wants to make it available for his colleagues to execute in a secure, compliant, and user-friendly interface that enables access controls and conforms to his company's data security standards, without the need to access an open-ended tool like ChatGPT. He wants to help others improve their experience and efficiency of performing routine tasks.",
    "response_is_code": true
  },
  {
    "name": "Self-service Copy Translation",
    "description": "Translate existing customer service support documents written for an expert into succinct, user-friendly summaries suitable for a customer self-service context.",
    "author": "Geoff",
    "prompt": "Given a sample of call center agent reference material, please translate it into a succinct, friendly, and approachable style that conveys every important detail in an efficient, condense manner. Omit content that is unlikely to aid a customer's understanding of the task. Use bullets for section where  you believe it would aid in legibility. Do not include the original reference material in your reply. Here is the reference material:",
    "requires_context": true,
    "placeholder_context": "How to Change Your Address in XYZ Bank's Servicing App\n\nAs a valued customer of XYZ Bank, we understand that you may need to update your personal information from time to time. One of the most common updates is your address, which is essential for us to send you important account-related documents and notifications. To make this process seamless, we have created a step-by-step guide to walk you through the process of changing your address in our servicing app. \n\nStep 1: Log into Your Account\n\nTo change your address, you will first need to log in to your account using your username and password. \n\nStep 2: Go to the Settings Menu\n\nOnce you have logged in, you will be directed to your account dashboard. From there, you will need to navigate to the settings menu. The settings menu can usually be found by clicking on your account name or profile picture. \n\nStep 3: Locate the \"Change Address\" Option\n\nWithin the settings menu, you should be able to find an option that allows you to change your address. This option may be labeled \"Update Address\" or \"Change Address.\" \n\nStep 4: Input Your New Address\n\nAfter selecting the \"Change Address\" option, you will be prompted to input your new address. This should include your street address, city, state, and zip code.  \n\nStep 5: Confirm Your Changes\n\nOnce you have submitted your new address, you will be asked to confirm your changes. Review the information carefully to ensure that it is correct. If you need to make any changes, you can do so before submitting the final update. \n\nStep 6: Wait for Confirmation\n\nAfter submitting your address change request, you will need to wait for confirmation from the bank. Once you have received confirmation, you can be sure that your address has been updated in our system.",
    "response_is_code": false
  },
  {
    "name": "Random Fun Fact about LLMs",
    "description": "Get a random, fun fact about LLMs and their abilities in approachable language.",
    "author": "OpenAI",
    "prompt": "Tell me a fun fact about large language models and their abilities. Please format your response as a rhyming, humorous poem.",
    "requires_context": false,
    "placeholder_context": "No context is required.",
    "response_is_code": false
  },
  {
    "name": "Knock-Knock Joke",
    "description": "Generate a knock-knock joke based on user-provided context.",
    "author": "OpenAI",
    "prompt": "Please generate a clever knock-knock joke based using the provided context as a topic. Here is the context:",
    "requires_context": true,
    "placeholder_context": "e.g. Axolotls",
    "response_is_code": false
  }
]