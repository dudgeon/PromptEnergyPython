[
  {
    "name": "Code Annotation",
    "description": "Annotate code to help a human software engineer understand poorly documented code in a language they are not familiar with.",
    "author": "Geoff",
    "prompt": "I would like your help with a code annotation exercise. Analyze the code, reply as though you are speaking to a human, and format your response using Markdown. Divide the code into significant component blocks, without modifying it. For each block, provide a helpful description in Markdown, noting any new variables and functions. Include the original code for each block as a separate Markdown code block beneath its description. Here is the code to analyze and document:",
    "requires_context": true,
    "placeholder_context": "PRINTSTMT(ACCTNUM, STARTDATE, ENDDATE)\n N TRANSACTION, TRANSACTIONDATE, TRANSACTIONAMT, TRANSACTIONDESC\n N BALANCE, DOLLARS, CENTS\n S BALANCE=0\n S DOLLARS=0\n S CENTS=0\n S TRANSACTIONDATE=STARTDATE-1\n F  S TRANSACTIONDATE=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE)) Q:'TRANSACTIONDATE!(TRANSACTIONDATE>ENDDATE)  D\n . S TRANSACTIONAMT=\"\"\n . F  S TRANSACTIONAMT=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE,TRANSACTIONAMT)) Q:'TRANSACTIONAMT  D\n . . S TRANSACTIONDESC=\"\"\n . . F  S TRANSACTIONDESC=$O(^TRANSACTION(ACCTNUM,TRANSACTIONDATE,TRANSACTIONAMT,TRANSACTIONDESC)) Q:'TRANSACTIONDESC  D\n . . . S BALANCE=BALANCE+TRANSACTIONAMT\n . . . S DOLLARS=$P(TRANSACTIONAMT,\".\")\n . . . S CENTS=$P(TRANSACTIONAMT,\".\",2)\n . . . I CENTS=\"\" S CENTS=0\n . . . I $L(CENTS)>2 S CENTS=$E(CENTS,1,2)\n . . . S TRANSACTIONDATE=$$FMTE^XLFDT(TRANSACTIONDATE)\n . . . W !,TRANSACTIONDATE,?15,TRANSACTIONDESC,?55,\"$\",DOLLARS,\".\",$S(CENTS=\"\":\"00\",1:CENTS)\n S DOLLARS=$P(BALANCE,\".\")\n S CENTS=$P(BALANCE,\".\",2)\n I CENTS=\"\" S CENTS=0\n I $L(CENTS)>2 S CENTS=$E(CENTS,1,2)\n W !,\"Ending Balance:\",?55,\"$\",DOLLARS,\".\",$S(CENTS=\"\":\"00\",1:CENTS)\n Q\n",
    "response_is_code": false
  },
  {
    "name": "Feature -> Stories + Gherkin",
    "description": "Help a product manager turn an unstructured description of a feature into a standardized, engineer-friendly story in Gherkin format, including test cases.",
    "author": "Geoff",
    "prompt": "Please write the comprehensive set of correctly formatted user stories required to enable the provided feature context in markdown. Sub-bullet each user story with the comprehensive acceptance criteria describing all behaviors for the user story; use gherkin formatting for each acceptance criteria. Here is the feature context:",
    "requires_context": true,
    "placeholder_context": "Geoff the product manager has an idea for a new LLM prompt; he wants to make it available for his colleagues to execute in a secure, compliant, and user-friendly interface that enables access controls and conforms to his company's data security standards, without the need to access an open-ended tool like ChatGPT. He wants to help others improve their experience and efficiency of performing routine tasks.",
    "response_is_code": true
  },
  {
    "name": "Self-service Copy Translation",
    "description": "Translate existing customer service support documents written for an expert into succinct, user-friendly summaries suitable for a customer self-service context.",
    "author": "Geoff",
    "prompt": "The goal is to take a sample of call center agent reference material and adapt it for use by customers to meet their own needs without calling. Please translate the sample into a succinct, friendly, and approachable style that conveys every important detail in an efficient, condense manner. Omit content that is unlikely to aid a customer's understanding of the task. Use bullets for section where  you believe it would aid in legibility. Do not include the original reference material in your reply. Here is the reference material:",
    "requires_context": true,
    "placeholder_context": "As a call center agent for XYZ Bank, you may receive requests from customers who need to update their personal information, such as their address. To assist them with this task, please follow the step-by-step guide below:\n\nStep 1: Ask the Customer to Log into Their Account\n\nAsk the customer to log into their XYZ Bank account using their username and password.\n\nStep 2: Instruct the Customer to Navigate to the Settings Menu\n\nOnce the customer has logged in, instruct them to navigate to the settings menu. This menu can usually be found by clicking on their account name or profile picture.\n\nStep 3: Advise the Customer to Locate the \"Change Address\" Option\n\nInstruct the customer to locate the \"Change Address\" option within the settings menu. This option may be labeled \"Update Address\" or \"Change Address.\"\n\nStep 4: Ask the Customer to Input Their New Address\n\nAfter the customer has selected the \"Change Address\" option, ask them to input their new address. This should include their street address, city, state, and zip code.\n\nStep 5: Verify the Customer's Changes\n\nAfter the customer has submitted their new address, verify the information to ensure that it is correct. If any changes need to be made, assist the customer in updating the information.\n\nStep 6: Notify the Customer of the Confirmation Process\n\nLet the customer know that their address change request has been received and that they will receive confirmation once it has been processed. Advise them to contact the bank if they do not receive confirmation within a reasonable amount of time.\n\nBy following these steps, you can help ensure that the customer's address is updated in our system and that they continue to receive important account-related documents and notifications.",
    "response_is_code": false
  },
  {
    "name": "Random Fun Fact about LLMs",
    "description": "Get a random, fun fact about LLMs and their abilities in approachable language.",
    "author": "OpenAI",
    "prompt": "Tell me a fun fact about large language models and their abilities. Please format your response as a rhyming, humorous poem.",
    "requires_context": false,
    "placeholder_context": "No context is required.",
    "response_is_code": false
  }
]